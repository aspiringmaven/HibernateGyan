<?xml version='1.0' encoding='utf-8'?>
<!--
  ~ Hibernate, Relational Persistence for Idiomatic Java
  ~
  ~ Copyright (c) 2010, Red Hat Inc. or third-party contributors as
  ~ indicated by the @author tags or express copyright attribution
  ~ statements applied by the authors.  All third-party contributions are
  ~ distributed under license by Red Hat Inc.
  ~
  ~ This copyrighted material is made available to anyone wishing to use, modify,
  ~ copy, or redistribute it subject to the terms and conditions of the GNU
  ~ Lesser General Public License, as published by the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  ~ or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
  ~ for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with this distribution; if not, write to:
  ~ Free Software Foundation, Inc.
  ~ 51 Franklin Street, Fifth Floor
  ~ Boston, MA  02110-1301  USA
  -->
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration>

    <session-factory>

        <!-- Database connection settings -->
        <property name="connection.driver_class">org.postgresql.Driver</property>
        <property name="connection.url">jdbc:postgresql://127.0.0.1:5432/DevDB</property>
        <property name="connection.username">postgres</property>
        <property name="connection.password">tiger</property>

        <!-- JDBC connection pool (use the built-in) -->
        <property name="connection.pool_size">10</property>

        <!-- SQL dialect -->
        <property name="dialect">org.hibernate.dialect.PostgreSQLDialect</property>

        <!-- Disable the second-level cache  -->
<!--         <property name="cache.provider_class">org.hibernate.cache.internal.NoCacheProvider</property> -->

        <!-- Echo all executed SQL to stdout -->
        <property name="show_sql">true</property>

        <!-- Drop and re-create the database schema on startup -->
        <property name="hbm2ddl.auto">create</property>
        
<!--         <mapping class="my.framework.hibernate.mapping.pojo.EBook"></mapping> -->
        

        <!-- Names the annotated entity class -->
<!--         <mapping class="org.hibernate.tutorial.annotations.Event"/> -->
<!--         <mapping class="my.framework.hibernate.beans.Engineer"></mapping> -->
<!--           <mapping class="my.framework.hibernate.beans.FBUser"></mapping> -->
        <mapping class="my.framework.hibernate.beans.PersonDetails"></mapping>
<!--          <mapping class="my.framework.hibernate.beans.Student"></mapping> -->
<!--           <mapping class="my.framework.hibernate.beans.Address"></mapping> -->
<!--           <mapping class="my.framework.hibernate.beans.Vehicle"></mapping> -->
<!--           <mapping class="my.framework.hibernate.beans.TwoWheeler"></mapping> -->
<!--           <mapping class="my.framework.hibernate.beans.FourWheeler"></mapping> -->
<!--           <mapping class="my.framework.hibernate.beans.AmazonUser"></mapping> -->
<!--           <mapping class="my.framework.hibernate.beans.Project"></mapping> -->
<!--           <mapping class="my.framework.hibernate.beans.Module"></mapping> -->
<!--           <mapping class="my.framework.hibernate.beans.Task"></mapping> -->
          <mapping class="my.framework.hibernate.mapping.bean.Customer"></mapping>
          <mapping class="my.framework.hibernate.mapping.bean.CustomerDetails"></mapping>
<!--           <mapping class="my.framework.hibernate.mapping.bean.School"></mapping> -->
<!--           <mapping class="my.framework.hibernate.mapping.bean.Teacher"></mapping> -->
<!--           <mapping class="my.framework.hibernate.mapping.bean.Event"></mapping> -->
<!--           <mapping class="my.framework.hibernate.mapping.bean.Delegate"></mapping> -->
          <mapping class="my.framework.hibernate.mapping.pojo.Account"></mapping>
          <mapping class="my.framework.hibernate.mapping.pojo.ATM"></mapping>
<!--           <mapping class="my.framework.hibernate.mapping.pojo.BankAccount"></mapping> -->
<!--           <mapping class="my.framework.hibernate.mapping.pojo.BankAccountPlus"></mapping> -->
          <mapping class="my.framework.hibernate.mapping.pojo.CodeUser"></mapping>
          <mapping class="my.framework.hibernate.mapping.pojo.CodeUserDetails"></mapping>
          <mapping class="my.framework.hibernate.mapping.pojo.Department"></mapping>
          <mapping class="my.framework.hibernate.mapping.pojo.Employee"></mapping>
<!--           <mapping class="my.framework.hibernate.mapping.pojo.Engineer"></mapping> -->
<!--           <mapping class="my.framework.hibernate.mapping.pojo.Skill"></mapping> -->
          <mapping class="my.framework.hibernate.mapping.pojo.Book"></mapping>
          <mapping class="my.framework.hibernate.mapping.pojo.Author"></mapping>

    </session-factory>
</hibernate-configuration>